# Everything that can be used by both bash and zsh

#
# Navigation
#

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias mkdir='mkdir -pv'
alias sl='ls'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias unmount='umount'
alias path='echo -e ${PATH//:/\\n}' #print all executable paths
alias gopath='cd "$GOPATH"'
function accio {
  ls -A | grep -i $1
}

#
# fzf based commands
#

# v - fzf preview and open files in nvim
function v() {
  if [ -z "$1" ];
  then
    fzf --preview "(ccat --color=always {} || cat {})" --bind "enter:execute(nvim {})"
  else
    # open directly
    nvim "$1"
  fi
}

# fd - cd to selected directory
function fd() {
  local dir
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}

# fkill - kill process
function fkill() {
  local pid
  pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    echo $pid | xargs kill -${1:-9}
  fi
}

#Color ls output
export CLICOLOR=1
export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx

# Extract most known archives with one command
function extract () {
  if [[ ! -f "$1" ]]
  then
     echo "'$1' is not a valid file"
  else
    case $1 in
      *.tar.bz2)   tar xjf $1     ;;
      *.tar.gz)    tar xzf $1     ;;
      *.bz2)       bunzip2 $1     ;;
      *.rar)       unrar e $1     ;;
      *.gz)        gunzip $1      ;;
      *.tar)       tar xf $1      ;;
      *.tbz2)      tar xjf $1     ;;
      *.tgz)       tar xzf $1     ;;
      *.zip)       unzip $1       ;;
      *.Z)         uncompress $1  ;;
      *.7z)        7z x $1        ;;
      *)     echo "'$1' cannot be extracted via `extract`" ;;
    esac
  fi
}

#
# Editor
#

export VISUAL=nvim
export EDITOR="$VISUAL"

#
# Programs
#

alias py='python'
alias k='kubectl'
alias vim='nvim'

#
# Homebrew
#
export HOMEBREW_NO_ANALYTICS=1


#
# Go path
# 
export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:$GOPATH/bin
export GOBIN=$HOME/go/bin

#
# For host-specific extra that shouldn't be
# added in here (security, specificness, etc.)
#
if [[ -f $HOME/.shell_extra ]]
then
  source $HOME/.shell_extra
fi
